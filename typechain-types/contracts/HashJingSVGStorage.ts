/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../common";

export interface HashJingSVGStorageInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "head"
      | "headPtr"
      | "prefix"
      | "prefixPtr"
      | "tail"
      | "tailPtr"
      | "textPrefix"
      | "textPrefixPtr"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "head", values?: undefined): string;
  encodeFunctionData(functionFragment: "headPtr", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "prefix",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "prefixPtr",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "tail", values?: undefined): string;
  encodeFunctionData(functionFragment: "tailPtr", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "textPrefix",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "textPrefixPtr",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "head", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "headPtr", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "prefix", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "prefixPtr", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tail", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tailPtr", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "textPrefix", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "textPrefixPtr",
    data: BytesLike
  ): Result;
}

export interface HashJingSVGStorage extends BaseContract {
  connect(runner?: ContractRunner | null): HashJingSVGStorage;
  waitForDeployment(): Promise<this>;

  interface: HashJingSVGStorageInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  head: TypedContractMethod<[], [string], "view">;

  headPtr: TypedContractMethod<[], [string], "view">;

  prefix: TypedContractMethod<[i: BigNumberish], [string], "view">;

  prefixPtr: TypedContractMethod<[arg0: BigNumberish], [string], "view">;

  tail: TypedContractMethod<[], [string], "view">;

  tailPtr: TypedContractMethod<[], [string], "view">;

  textPrefix: TypedContractMethod<[i: BigNumberish], [string], "view">;

  textPrefixPtr: TypedContractMethod<[arg0: BigNumberish], [string], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "head"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "headPtr"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "prefix"
  ): TypedContractMethod<[i: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "prefixPtr"
  ): TypedContractMethod<[arg0: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "tail"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "tailPtr"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "textPrefix"
  ): TypedContractMethod<[i: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "textPrefixPtr"
  ): TypedContractMethod<[arg0: BigNumberish], [string], "view">;

  filters: {};
}
